"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { createNews } from "@/admin/news/api/news";
import styles from "@/admin/news/components/edit-form/styles.module.scss";

export default function CreateNewsForm() {
  const router = useRouter();

  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");
  const [category, setCategory] = useState("general");
  const [image, setImage] = useState<File | null>(null);
  const [imagePreview, setImagePreview] = useState<string | null>(null);
  const [error, setError] = useState("");

  useEffect(() => {
    if (!image) {
      setImagePreview(null);
      return;
    }

    const objectUrl = URL.createObjectURL(image);
    setImagePreview(objectUrl);

    return () => URL.revokeObjectURL(objectUrl);
  }, [image]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");

    if (!image) {
      setError("–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–±–æ–≤'—è–∑–∫–æ–≤–µ");
      return;
    }

    try {
      const newsData = { title, content, category };
      await createNews(newsData, image);

      router.push("/admin/news/1");
    } catch (err: any) {
      setError(err.response?.data?.message || "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏");
    } finally {
    }
  };

  return (
    <form onSubmit={handleSubmit} className={styles.form}>
      <h2 className={styles.title}>–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–Ω—É</h2>
      {error && <p className={styles.error}>{error}</p>}

      <input
        type="text"
        placeholder="üñâ –ó–∞–≥–æ–ª–æ–≤–æ–∫"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
        required
        className={styles.input}
      />

      <textarea
        placeholder="üñâ –ö–æ–Ω—Ç–µ–Ω—Ç"
        value={content}
        onChange={(e) => setContent(e.target.value)}
        required
        className={styles.textarea}
      />

      <select
        value={category}
        onChange={(e) => setCategory(e.target.value)}
        required
        className={styles.input}
      >
        <option value="general">–ó–∞–≥–∞–ª—å–Ω–∞</option>
        <option value="promotion">–ê–∫—Ü—ñ—è</option>
        <option value="event">–ü–æ–¥—ñ—è</option>
      </select>

      <input
        type="file"
        accept="image/*"
        onChange={(e) => setImage(e.target.files?.[0] || null)}
        required
        className={styles.file}
      />

      {imagePreview && (
        <div className={styles.previewContainer}>
          <p className={styles.previewLabel}>–ü—Ä–µ–≤‚Äô—é –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</p>
          <img
            src={imagePreview}
            alt="–ü—Ä–µ–≤‚Äô—é"
            className={styles.previewImage}
          />
        </div>
      )}

      <button type="submit" className={styles.submitButton}></button>
    </form>
  );
}
