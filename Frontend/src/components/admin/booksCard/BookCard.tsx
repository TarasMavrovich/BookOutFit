"use client";

import React, { useState } from "react";
import styles from "@/components/admin/booksCard/BookCard.module.css";
import { Button } from "@/components/ui/button/Button";
import Link from "next/link";
import { Book } from "@/shared/types/bookTypes/bookTypes";
import { removeBook } from "@/shared/admin/books/books-api";
import ConfirmModal from "@/components/ui/modalAdmin/ConfirmModal"; // –Ü–º–ø–æ—Ä—Ç—É–π —Å–≤–æ—é –º–æ–¥–∞–ª–∫—É

const BookCard = ({ book }: { book: Book }) => {
    const [isDeleting, setIsDeleting] = useState(false);
    const [isVisible, setIsVisible] = useState(true);
    const [isModalOpen, setIsModalOpen] = useState(false); // –î–æ–¥–∞–ª–∏ —Å—Ç–∞–Ω –¥–ª—è –º–æ–¥–∞–ª–∫–∏

    const handleDelete = async () => {
        try {
            setIsDeleting(true);
            await removeBook(book.id.toString());
            setIsVisible(false);
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫–Ω–∏–≥–∏:", error);
            alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–Ω–∏–≥—É.");
        } finally {
            setIsDeleting(false);
            setIsModalOpen(false);
        }
    };

    if (!isVisible) return null;

    return (
        <>
            <div className={styles.bookCard}>
                <div className={styles.topSection}>
                    <div className={styles.imageWrapper}>
                        <img
                            src={book.image || "/no-image.png"}
                            alt={book.title}
                            className={styles.bookImage}
                        />
                        <div className={styles.imageText}>
                            <h2>{book.title}</h2>
                            {book.author && <p>–ê–≤—Ç–æ—Ä: {book.author}</p>}
                            <div className={styles.details}>
                                <span>üí∞ {book.price} –≥—Ä–Ω</span>
                                <span>üìò {book.cover === "soft" ? "–ú‚Äô—è–∫–∞" : "–¢–≤–µ—Ä–¥–∞"}</span>
                                <span>üéÅ {book.gift ? "–¢–∞–∫" : "–ù—ñ"}</span>
                                <span>üì∞ {book.published ? "–¢–∞–∫" : "–ù—ñ"}</span>
                            </div>
                        </div>
                    </div>
                    <div className={styles.infoSection}>
                        {book.description && (
                            <p className={styles.description}>{book.description}</p>
                        )}
                    </div>
                </div>

                <div className={styles.buttonSection}>
                    <Link href={`/admin/books/edit/${book.id}`}>
                        <Button variant="edit">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏</Button>
                    </Link>
                    <Button
                        variant="delete"
                        onClick={() => setIsModalOpen(true)}
                        disabled={isDeleting}
                    >
                        {isDeleting ? "–í–∏–¥–∞–ª–µ–Ω–Ω—è..." : "–í–∏–¥–∞–ª–∏—Ç–∏"}
                    </Button>
                </div>
            </div>

            <ConfirmModal
                isOpen={isModalOpen}
                message="delete"
                onConfirm={handleDelete}
                onCancel={() => setIsModalOpen(false)}
            />
        </>
    );
};

export default BookCard;
